pipeline:
  projectIdentifier: Security_Test_Scans
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: Shell
        identifier: Shell
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: Define_Repositories
                  identifier: Define_Repositories
                  spec:
                    shell: Bash
                    source:
                      type: Inline
                      spec:
                        script: |-
                          echo "harness/drone-cli:master
                          harness/lite-engine:main
                          harness/global-gateway:develop
                          drone/policy-mgmt:main
                          drone/drone-jira:master
                          drone/drone-plugin-index:main" > file.txt

                          # Convert lines to CSV and deduplicate
                          output=$(awk '!seen[$0]++' file.txt | paste -s -d ",")
                          csv_contents="$output"
                          echo "$csv_contents"
                    outputVariables:
                      - name: myvar
                        type: String
                        value: csv_contents
    - stage:
        name: Clone and Scan Repos
        identifier: clone_and_scan_repos
        type: CI
        spec:
          cloneCodebase: false
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - stepGroup:
                  name: semgrep_scan
                  identifier: semgrep_scan
                  steps:
                    - step:
                        type: GitClone
                        name: GitClone_Repo
                        identifier: GitClone_Repo
                        spec:
                          connectorRef: pranaytodolist
                          repoName: <+matrix.jira.split(":")[0]>
                          cloneDirectory: /harness/<+matrix.jira.split(":")[0]>
                          build:
                            type: branch
                            spec:
                              branch: <+matrix.jira.split(":")[1]>
                    - step:
                        type: Semgrep
                        name: Semgrep_Scan
                        identifier: Semgrep_Scan
                        spec:
                          mode: orchestration
                          config: default
                          target:
                            type: repository
                            workspace: /harness/<+matrix.jira.split(":")[0]>
                            detection: manual
                            name: <+matrix.jira.split(":")[0]>
                            variant: <+matrix.jira.split(":")[1]>
                          advanced:
                            log:
                              level: info
                          output:
                            outputVariables:
                              - name: CRITICAL
                                type: String
                                value: <+execution.result.findings.CRITICAL>
                              - name: HIGH
                                type: String
                                value: <+execution.result.findings.HIGH>
                              - name: MEDIUM
                                type: String
                                value: <+execution.result.findings.MEDIUM>
                              - name: LOW
                                type: String
                                value: <+execution.result.findings.LOW>
                  strategy:
                    matrix:
                      jira: <+pipeline.stages.Shell.spec.execution.steps.Define_Repositories.output.outputVariables.myvar.split(',')>
              - step:
                  type: Run
                  name: Print_Repository_Findings
                  identifier: Print_Repository_Findings
                  spec:
                    shell: Sh
                    source:
                      type: Inline
                      spec:
                        script: |-
                          repo="<+matrix.jira.split(':')[0]>"
                          branch="<+matrix.jira.split(':')[1]>"
                          critical="${<+pipeline.stages.clone_and_scan_repos.spec.execution.steps.Semgrep_Scan.output.outputVariables.CRITICAL>:-0}"
                          high="${<+pipeline.stages.clone_and_scan_repos.spec.execution.steps.Semgrep_Scan.output.outputVariables.HIGH>:-0}"
                          medium="${<+pipeline.stages.clone_and_scan_repos.spec.execution.steps.Semgrep_Scan.output.outputVariables.MEDIUM>:-0}"
                          low="${<+pipeline.stages.clone_and_scan_repos.spec.execution.steps.Semgrep_Scan.output.outputVariables.LOW>:-0}"
                          total=$((critical + high + medium + low))

                          echo "Repository: $repo"
                          echo "Branch: $branch"
                          echo "Critical Findings: $critical"
                          echo "High Findings: $high"
                          echo "Medium Findings: $medium"
                          echo "Low Findings: $low"
                          echo "Total Findings: $total"
          buildIntelligence:
            enabled: false
  identifier: semgrep_test_29_10
  name: semgrep_test_29_10
