pipeline:
  projectIdentifier: Security_Test_Scans
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: Shell
        identifier: Shell
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: Define_Repositories
                  identifier: Define_Repositories
                  spec:
                    shell: Bash
                    source:
                      type: Inline
                      spec:
                        script: |-
                          echo "harness/drone-cli:master
                          harness/lite-engine:main
                          drone/drone-jira:master
                          drone/drone-plugin-index:main" > file.txt


                          # Read the lines from file.txt, convert to comma-separated CSV, and dedupe
                          output=$(awk '!seen[$0]++' file.txt | paste -s -d ",")

                          # # Save the CSV output to a variable
                          csv_contents="$output"

                          # # Print the CSV data
                          echo "$csv_contents"
                    outputVariables:
                      - name: myvar
                        type: String
                        value: csv_contents
                    executionTarget: {}
                    environmentVariables: []
                  timeout: 10m
    - stage:
        name: Clone and Scan Repos
        identifier: clone_and_scan_repos
        type: CI
        spec:
          cloneCodebase: false
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - stepGroup:
                  name: semgrep_scan
                  identifier: semgrep_scan
                  steps:
                    - step:
                        type: GitClone
                        name: GitClone_Repo
                        identifier: GitClone_Repo
                        spec:
                          connectorRef: pranaytodolist
                          repoName: <+matrix.jira.split(":")[0]>
                          cloneDirectory: /harness/<+matrix.jira.split(":")[0]>
                          build:
                            type: branch
                            spec:
                              branch: <+matrix.jira.split(":")[1]>
                    - step:
                        type: Semgrep
                        name: Semgrep_Scan
                        identifier: Semgrep_Scan
                        spec:
                          mode: orchestration
                          config: default
                          target:
                            type: repository
                            workspace: /harness/<+matrix.jira.split(":")[0]>
                            detection: manual
                            name: <+matrix.jira.split(":")[0]>
                            variant: <+matrix.jira.split(":")[1]>
                          advanced:
                            log:
                              level: info
                          auth:
                            access_token: <+secrets.getValue("piyush-semgrep-pro-token")>
                    - step:
                        type: Run
                        name: Run_1
                        identifier: Run_1
                        spec:
                          shell: Sh
                          command: |-
                            echo <+matrix.jira.split(":")[0]>
                            echo <+matrix.jira.split(":")[1]>
                            ls /harness/<+matrix.jira.split(":")[0]>
                            find /harness -type f -name "*.sarif" -exec echo {} \;
                  strategy:
                    matrix:
                      jira: <+pipeline.stages.Shell.spec.execution.steps.Define_Repositories.output.outputVariables.myvar.split(',')>
          buildIntelligence:
            enabled: false
        variables:
          - name: SEMGREP_APP_TOKEN
            type: Secret
            description: ""
            required: false
            value: piyush-semgrep-pro-token
  identifier: semgrep_test_29_10
  name: semgrep_test_29_10
